// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin_request.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "plugin_request.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace cpad {
class VersionRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VersionRequest> {
} _VersionRequest_default_instance_;
class VersionResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VersionResponse> {
} _VersionResponse_default_instance_;
class InsertionPointRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InsertionPointRequest> {
} _InsertionPointRequest_default_instance_;
class InsertionPointResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InsertionPointResponse> {
} _InsertionPointResponse_default_instance_;

namespace protobuf_plugin_5frequest_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionRequest, client_version_minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionRequest, client_version_major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionRequest, client_provider_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionResponse, server_version_minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionResponse, server_version_major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionResponse, server_provider_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertionPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertionPointRequest, cfun_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertionPointRequest, location_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertionPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertionPointResponse, insert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertionPointResponse, asm__),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(VersionRequest)},
  { 7, -1, sizeof(VersionResponse)},
  { 14, -1, sizeof(InsertionPointRequest)},
  { 20, -1, sizeof(InsertionPointResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_VersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VersionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InsertionPointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InsertionPointResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "plugin_request.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _VersionRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _VersionResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _InsertionPointRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _InsertionPointResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _VersionRequest_default_instance_.DefaultConstruct();
  _VersionResponse_default_instance_.DefaultConstruct();
  _InsertionPointRequest_default_instance_.DefaultConstruct();
  _InsertionPointResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024plugin_request.proto\022\004cpad\"j\n\016VersionR"
      "equest\022\034\n\024client_version_minor\030\001 \001(\r\022\034\n\024"
      "client_version_major\030\002 \001(\r\022\034\n\024client_pro"
      "vider_name\030\003 \001(\t\"k\n\017VersionResponse\022\034\n\024s"
      "erver_version_minor\030\001 \001(\r\022\034\n\024server_vers"
      "ion_major\030\002 \001(\r\022\034\n\024server_provider_name\030"
      "\003 \001(\t\"U\n\025InsertionPointRequest\022\021\n\tcfun_n"
      "ame\030\001 \001(\t\022)\n\010location\030\002 \001(\0162\027.cpad.Inser"
      "tionLocation\"5\n\026InsertionPointResponse\022\016"
      "\n\006insert\030\001 \001(\010\022\013\n\003asm\030\002 \001(\t*\246\001\n\021Insertio"
      "nLocation\022\030\n\024FUNCTION_ENTRY_BLOCK\020\000\022\030\n\024F"
      "UNCTION_BEFORE_CALL\020\001\022\027\n\023FUNCTION_AFTER_"
      "CALL\020\002\022\027\n\023FUNCTION_EXIT_BLOCK\020\003\022\025\n\021BASIC"
      "_BLOCK_ENTRY\020\004\022\024\n\020BASIC_BLOCK_EXIT\020\0052O\n\016"
      "VersionService\022=\n\016VersionService\022\024.cpad."
      "VersionRequest\032\025.cpad.VersionResponse2k\n"
      "\025InsertionPointService\022R\n\025InsertionPoint"
      "Service\022\033.cpad.InsertionPointRequest\032\034.c"
      "pad.InsertionPointResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 754);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "plugin_request.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_plugin_5frequest_2eproto

const ::google::protobuf::EnumDescriptor* InsertionLocation_descriptor() {
  protobuf_plugin_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plugin_5frequest_2eproto::file_level_enum_descriptors[0];
}
bool InsertionLocation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionRequest::kClientVersionMinorFieldNumber;
const int VersionRequest::kClientVersionMajorFieldNumber;
const int VersionRequest::kClientProviderNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionRequest::VersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plugin_5frequest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cpad.VersionRequest)
}
VersionRequest::VersionRequest(const VersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_provider_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_provider_name().size() > 0) {
    client_provider_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_provider_name_);
  }
  ::memcpy(&client_version_minor_, &from.client_version_minor_,
    reinterpret_cast<char*>(&client_version_major_) -
    reinterpret_cast<char*>(&client_version_minor_) + sizeof(client_version_major_));
  // @@protoc_insertion_point(copy_constructor:cpad.VersionRequest)
}

void VersionRequest::SharedCtor() {
  client_provider_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_version_minor_, 0, reinterpret_cast<char*>(&client_version_major_) -
    reinterpret_cast<char*>(&client_version_minor_) + sizeof(client_version_major_));
  _cached_size_ = 0;
}

VersionRequest::~VersionRequest() {
  // @@protoc_insertion_point(destructor:cpad.VersionRequest)
  SharedDtor();
}

void VersionRequest::SharedDtor() {
  client_provider_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VersionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VersionRequest::descriptor() {
  protobuf_plugin_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plugin_5frequest_2eproto::file_level_metadata[0].descriptor;
}

const VersionRequest& VersionRequest::default_instance() {
  protobuf_plugin_5frequest_2eproto::InitDefaults();
  return *internal_default_instance();
}

VersionRequest* VersionRequest::New(::google::protobuf::Arena* arena) const {
  VersionRequest* n = new VersionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cpad.VersionRequest)
  client_provider_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_version_minor_, 0, reinterpret_cast<char*>(&client_version_major_) -
    reinterpret_cast<char*>(&client_version_minor_) + sizeof(client_version_major_));
}

bool VersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cpad.VersionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 client_version_minor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_version_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_version_major = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_version_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_provider_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_provider_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_provider_name().data(), this->client_provider_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cpad.VersionRequest.client_provider_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cpad.VersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cpad.VersionRequest)
  return false;
#undef DO_
}

void VersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cpad.VersionRequest)
  // uint32 client_version_minor = 1;
  if (this->client_version_minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_version_minor(), output);
  }

  // uint32 client_version_major = 2;
  if (this->client_version_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_version_major(), output);
  }

  // string client_provider_name = 3;
  if (this->client_provider_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_provider_name().data(), this->client_provider_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cpad.VersionRequest.client_provider_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->client_provider_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:cpad.VersionRequest)
}

::google::protobuf::uint8* VersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cpad.VersionRequest)
  // uint32 client_version_minor = 1;
  if (this->client_version_minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_version_minor(), target);
  }

  // uint32 client_version_major = 2;
  if (this->client_version_major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_version_major(), target);
  }

  // string client_provider_name = 3;
  if (this->client_provider_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_provider_name().data(), this->client_provider_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cpad.VersionRequest.client_provider_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->client_provider_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cpad.VersionRequest)
  return target;
}

size_t VersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cpad.VersionRequest)
  size_t total_size = 0;

  // string client_provider_name = 3;
  if (this->client_provider_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_provider_name());
  }

  // uint32 client_version_minor = 1;
  if (this->client_version_minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_version_minor());
  }

  // uint32 client_version_major = 2;
  if (this->client_version_major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_version_major());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cpad.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cpad.VersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cpad.VersionRequest)
    MergeFrom(*source);
  }
}

void VersionRequest::MergeFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cpad.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.client_provider_name().size() > 0) {

    client_provider_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_provider_name_);
  }
  if (from.client_version_minor() != 0) {
    set_client_version_minor(from.client_version_minor());
  }
  if (from.client_version_major() != 0) {
    set_client_version_major(from.client_version_major());
  }
}

void VersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cpad.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionRequest::CopyFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cpad.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionRequest::IsInitialized() const {
  return true;
}

void VersionRequest::Swap(VersionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionRequest::InternalSwap(VersionRequest* other) {
  client_provider_name_.Swap(&other->client_provider_name_);
  std::swap(client_version_minor_, other->client_version_minor_);
  std::swap(client_version_major_, other->client_version_major_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VersionRequest::GetMetadata() const {
  protobuf_plugin_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plugin_5frequest_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VersionRequest

// uint32 client_version_minor = 1;
void VersionRequest::clear_client_version_minor() {
  client_version_minor_ = 0u;
}
::google::protobuf::uint32 VersionRequest::client_version_minor() const {
  // @@protoc_insertion_point(field_get:cpad.VersionRequest.client_version_minor)
  return client_version_minor_;
}
void VersionRequest::set_client_version_minor(::google::protobuf::uint32 value) {
  
  client_version_minor_ = value;
  // @@protoc_insertion_point(field_set:cpad.VersionRequest.client_version_minor)
}

// uint32 client_version_major = 2;
void VersionRequest::clear_client_version_major() {
  client_version_major_ = 0u;
}
::google::protobuf::uint32 VersionRequest::client_version_major() const {
  // @@protoc_insertion_point(field_get:cpad.VersionRequest.client_version_major)
  return client_version_major_;
}
void VersionRequest::set_client_version_major(::google::protobuf::uint32 value) {
  
  client_version_major_ = value;
  // @@protoc_insertion_point(field_set:cpad.VersionRequest.client_version_major)
}

// string client_provider_name = 3;
void VersionRequest::clear_client_provider_name() {
  client_provider_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VersionRequest::client_provider_name() const {
  // @@protoc_insertion_point(field_get:cpad.VersionRequest.client_provider_name)
  return client_provider_name_.GetNoArena();
}
void VersionRequest::set_client_provider_name(const ::std::string& value) {
  
  client_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cpad.VersionRequest.client_provider_name)
}
#if LANG_CXX11
void VersionRequest::set_client_provider_name(::std::string&& value) {
  
  client_provider_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cpad.VersionRequest.client_provider_name)
}
#endif
void VersionRequest::set_client_provider_name(const char* value) {
  
  client_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cpad.VersionRequest.client_provider_name)
}
void VersionRequest::set_client_provider_name(const char* value, size_t size) {
  
  client_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cpad.VersionRequest.client_provider_name)
}
::std::string* VersionRequest::mutable_client_provider_name() {
  
  // @@protoc_insertion_point(field_mutable:cpad.VersionRequest.client_provider_name)
  return client_provider_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VersionRequest::release_client_provider_name() {
  // @@protoc_insertion_point(field_release:cpad.VersionRequest.client_provider_name)
  
  return client_provider_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VersionRequest::set_allocated_client_provider_name(::std::string* client_provider_name) {
  if (client_provider_name != NULL) {
    
  } else {
    
  }
  client_provider_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_provider_name);
  // @@protoc_insertion_point(field_set_allocated:cpad.VersionRequest.client_provider_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionResponse::kServerVersionMinorFieldNumber;
const int VersionResponse::kServerVersionMajorFieldNumber;
const int VersionResponse::kServerProviderNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionResponse::VersionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plugin_5frequest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cpad.VersionResponse)
}
VersionResponse::VersionResponse(const VersionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_provider_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_provider_name().size() > 0) {
    server_provider_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_provider_name_);
  }
  ::memcpy(&server_version_minor_, &from.server_version_minor_,
    reinterpret_cast<char*>(&server_version_major_) -
    reinterpret_cast<char*>(&server_version_minor_) + sizeof(server_version_major_));
  // @@protoc_insertion_point(copy_constructor:cpad.VersionResponse)
}

void VersionResponse::SharedCtor() {
  server_provider_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_version_minor_, 0, reinterpret_cast<char*>(&server_version_major_) -
    reinterpret_cast<char*>(&server_version_minor_) + sizeof(server_version_major_));
  _cached_size_ = 0;
}

VersionResponse::~VersionResponse() {
  // @@protoc_insertion_point(destructor:cpad.VersionResponse)
  SharedDtor();
}

void VersionResponse::SharedDtor() {
  server_provider_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VersionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VersionResponse::descriptor() {
  protobuf_plugin_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plugin_5frequest_2eproto::file_level_metadata[1].descriptor;
}

const VersionResponse& VersionResponse::default_instance() {
  protobuf_plugin_5frequest_2eproto::InitDefaults();
  return *internal_default_instance();
}

VersionResponse* VersionResponse::New(::google::protobuf::Arena* arena) const {
  VersionResponse* n = new VersionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cpad.VersionResponse)
  server_provider_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&server_version_minor_, 0, reinterpret_cast<char*>(&server_version_major_) -
    reinterpret_cast<char*>(&server_version_minor_) + sizeof(server_version_major_));
}

bool VersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cpad.VersionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 server_version_minor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_version_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_version_major = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_version_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_provider_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_provider_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_provider_name().data(), this->server_provider_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cpad.VersionResponse.server_provider_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cpad.VersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cpad.VersionResponse)
  return false;
#undef DO_
}

void VersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cpad.VersionResponse)
  // uint32 server_version_minor = 1;
  if (this->server_version_minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_version_minor(), output);
  }

  // uint32 server_version_major = 2;
  if (this->server_version_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_version_major(), output);
  }

  // string server_provider_name = 3;
  if (this->server_provider_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_provider_name().data(), this->server_provider_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cpad.VersionResponse.server_provider_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->server_provider_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:cpad.VersionResponse)
}

::google::protobuf::uint8* VersionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cpad.VersionResponse)
  // uint32 server_version_minor = 1;
  if (this->server_version_minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_version_minor(), target);
  }

  // uint32 server_version_major = 2;
  if (this->server_version_major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_version_major(), target);
  }

  // string server_provider_name = 3;
  if (this->server_provider_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_provider_name().data(), this->server_provider_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cpad.VersionResponse.server_provider_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_provider_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cpad.VersionResponse)
  return target;
}

size_t VersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cpad.VersionResponse)
  size_t total_size = 0;

  // string server_provider_name = 3;
  if (this->server_provider_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_provider_name());
  }

  // uint32 server_version_minor = 1;
  if (this->server_version_minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_version_minor());
  }

  // uint32 server_version_major = 2;
  if (this->server_version_major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_version_major());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cpad.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cpad.VersionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cpad.VersionResponse)
    MergeFrom(*source);
  }
}

void VersionResponse::MergeFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cpad.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.server_provider_name().size() > 0) {

    server_provider_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_provider_name_);
  }
  if (from.server_version_minor() != 0) {
    set_server_version_minor(from.server_version_minor());
  }
  if (from.server_version_major() != 0) {
    set_server_version_major(from.server_version_major());
  }
}

void VersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cpad.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionResponse::CopyFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cpad.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionResponse::IsInitialized() const {
  return true;
}

void VersionResponse::Swap(VersionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionResponse::InternalSwap(VersionResponse* other) {
  server_provider_name_.Swap(&other->server_provider_name_);
  std::swap(server_version_minor_, other->server_version_minor_);
  std::swap(server_version_major_, other->server_version_major_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VersionResponse::GetMetadata() const {
  protobuf_plugin_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plugin_5frequest_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VersionResponse

// uint32 server_version_minor = 1;
void VersionResponse::clear_server_version_minor() {
  server_version_minor_ = 0u;
}
::google::protobuf::uint32 VersionResponse::server_version_minor() const {
  // @@protoc_insertion_point(field_get:cpad.VersionResponse.server_version_minor)
  return server_version_minor_;
}
void VersionResponse::set_server_version_minor(::google::protobuf::uint32 value) {
  
  server_version_minor_ = value;
  // @@protoc_insertion_point(field_set:cpad.VersionResponse.server_version_minor)
}

// uint32 server_version_major = 2;
void VersionResponse::clear_server_version_major() {
  server_version_major_ = 0u;
}
::google::protobuf::uint32 VersionResponse::server_version_major() const {
  // @@protoc_insertion_point(field_get:cpad.VersionResponse.server_version_major)
  return server_version_major_;
}
void VersionResponse::set_server_version_major(::google::protobuf::uint32 value) {
  
  server_version_major_ = value;
  // @@protoc_insertion_point(field_set:cpad.VersionResponse.server_version_major)
}

// string server_provider_name = 3;
void VersionResponse::clear_server_provider_name() {
  server_provider_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& VersionResponse::server_provider_name() const {
  // @@protoc_insertion_point(field_get:cpad.VersionResponse.server_provider_name)
  return server_provider_name_.GetNoArena();
}
void VersionResponse::set_server_provider_name(const ::std::string& value) {
  
  server_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cpad.VersionResponse.server_provider_name)
}
#if LANG_CXX11
void VersionResponse::set_server_provider_name(::std::string&& value) {
  
  server_provider_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cpad.VersionResponse.server_provider_name)
}
#endif
void VersionResponse::set_server_provider_name(const char* value) {
  
  server_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cpad.VersionResponse.server_provider_name)
}
void VersionResponse::set_server_provider_name(const char* value, size_t size) {
  
  server_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cpad.VersionResponse.server_provider_name)
}
::std::string* VersionResponse::mutable_server_provider_name() {
  
  // @@protoc_insertion_point(field_mutable:cpad.VersionResponse.server_provider_name)
  return server_provider_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VersionResponse::release_server_provider_name() {
  // @@protoc_insertion_point(field_release:cpad.VersionResponse.server_provider_name)
  
  return server_provider_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VersionResponse::set_allocated_server_provider_name(::std::string* server_provider_name) {
  if (server_provider_name != NULL) {
    
  } else {
    
  }
  server_provider_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_provider_name);
  // @@protoc_insertion_point(field_set_allocated:cpad.VersionResponse.server_provider_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertionPointRequest::kCfunNameFieldNumber;
const int InsertionPointRequest::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertionPointRequest::InsertionPointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plugin_5frequest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cpad.InsertionPointRequest)
}
InsertionPointRequest::InsertionPointRequest(const InsertionPointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cfun_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cfun_name().size() > 0) {
    cfun_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cfun_name_);
  }
  location_ = from.location_;
  // @@protoc_insertion_point(copy_constructor:cpad.InsertionPointRequest)
}

void InsertionPointRequest::SharedCtor() {
  cfun_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = 0;
  _cached_size_ = 0;
}

InsertionPointRequest::~InsertionPointRequest() {
  // @@protoc_insertion_point(destructor:cpad.InsertionPointRequest)
  SharedDtor();
}

void InsertionPointRequest::SharedDtor() {
  cfun_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InsertionPointRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertionPointRequest::descriptor() {
  protobuf_plugin_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plugin_5frequest_2eproto::file_level_metadata[2].descriptor;
}

const InsertionPointRequest& InsertionPointRequest::default_instance() {
  protobuf_plugin_5frequest_2eproto::InitDefaults();
  return *internal_default_instance();
}

InsertionPointRequest* InsertionPointRequest::New(::google::protobuf::Arena* arena) const {
  InsertionPointRequest* n = new InsertionPointRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InsertionPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cpad.InsertionPointRequest)
  cfun_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = 0;
}

bool InsertionPointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cpad.InsertionPointRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cfun_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cfun_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cfun_name().data(), this->cfun_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cpad.InsertionPointRequest.cfun_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .cpad.InsertionLocation location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_location(static_cast< ::cpad::InsertionLocation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cpad.InsertionPointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cpad.InsertionPointRequest)
  return false;
#undef DO_
}

void InsertionPointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cpad.InsertionPointRequest)
  // string cfun_name = 1;
  if (this->cfun_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfun_name().data(), this->cfun_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cpad.InsertionPointRequest.cfun_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cfun_name(), output);
  }

  // .cpad.InsertionLocation location = 2;
  if (this->location() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->location(), output);
  }

  // @@protoc_insertion_point(serialize_end:cpad.InsertionPointRequest)
}

::google::protobuf::uint8* InsertionPointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cpad.InsertionPointRequest)
  // string cfun_name = 1;
  if (this->cfun_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfun_name().data(), this->cfun_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cpad.InsertionPointRequest.cfun_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cfun_name(), target);
  }

  // .cpad.InsertionLocation location = 2;
  if (this->location() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->location(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cpad.InsertionPointRequest)
  return target;
}

size_t InsertionPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cpad.InsertionPointRequest)
  size_t total_size = 0;

  // string cfun_name = 1;
  if (this->cfun_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cfun_name());
  }

  // .cpad.InsertionLocation location = 2;
  if (this->location() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->location());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InsertionPointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cpad.InsertionPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertionPointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertionPointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cpad.InsertionPointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cpad.InsertionPointRequest)
    MergeFrom(*source);
  }
}

void InsertionPointRequest::MergeFrom(const InsertionPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cpad.InsertionPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.cfun_name().size() > 0) {

    cfun_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cfun_name_);
  }
  if (from.location() != 0) {
    set_location(from.location());
  }
}

void InsertionPointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cpad.InsertionPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertionPointRequest::CopyFrom(const InsertionPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cpad.InsertionPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertionPointRequest::IsInitialized() const {
  return true;
}

void InsertionPointRequest::Swap(InsertionPointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertionPointRequest::InternalSwap(InsertionPointRequest* other) {
  cfun_name_.Swap(&other->cfun_name_);
  std::swap(location_, other->location_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InsertionPointRequest::GetMetadata() const {
  protobuf_plugin_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plugin_5frequest_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InsertionPointRequest

// string cfun_name = 1;
void InsertionPointRequest::clear_cfun_name() {
  cfun_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InsertionPointRequest::cfun_name() const {
  // @@protoc_insertion_point(field_get:cpad.InsertionPointRequest.cfun_name)
  return cfun_name_.GetNoArena();
}
void InsertionPointRequest::set_cfun_name(const ::std::string& value) {
  
  cfun_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cpad.InsertionPointRequest.cfun_name)
}
#if LANG_CXX11
void InsertionPointRequest::set_cfun_name(::std::string&& value) {
  
  cfun_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cpad.InsertionPointRequest.cfun_name)
}
#endif
void InsertionPointRequest::set_cfun_name(const char* value) {
  
  cfun_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cpad.InsertionPointRequest.cfun_name)
}
void InsertionPointRequest::set_cfun_name(const char* value, size_t size) {
  
  cfun_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cpad.InsertionPointRequest.cfun_name)
}
::std::string* InsertionPointRequest::mutable_cfun_name() {
  
  // @@protoc_insertion_point(field_mutable:cpad.InsertionPointRequest.cfun_name)
  return cfun_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InsertionPointRequest::release_cfun_name() {
  // @@protoc_insertion_point(field_release:cpad.InsertionPointRequest.cfun_name)
  
  return cfun_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InsertionPointRequest::set_allocated_cfun_name(::std::string* cfun_name) {
  if (cfun_name != NULL) {
    
  } else {
    
  }
  cfun_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfun_name);
  // @@protoc_insertion_point(field_set_allocated:cpad.InsertionPointRequest.cfun_name)
}

// .cpad.InsertionLocation location = 2;
void InsertionPointRequest::clear_location() {
  location_ = 0;
}
::cpad::InsertionLocation InsertionPointRequest::location() const {
  // @@protoc_insertion_point(field_get:cpad.InsertionPointRequest.location)
  return static_cast< ::cpad::InsertionLocation >(location_);
}
void InsertionPointRequest::set_location(::cpad::InsertionLocation value) {
  
  location_ = value;
  // @@protoc_insertion_point(field_set:cpad.InsertionPointRequest.location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InsertionPointResponse::kInsertFieldNumber;
const int InsertionPointResponse::kAsmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InsertionPointResponse::InsertionPointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plugin_5frequest_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:cpad.InsertionPointResponse)
}
InsertionPointResponse::InsertionPointResponse(const InsertionPointResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  asm__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.asm_().size() > 0) {
    asm__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asm__);
  }
  insert_ = from.insert_;
  // @@protoc_insertion_point(copy_constructor:cpad.InsertionPointResponse)
}

void InsertionPointResponse::SharedCtor() {
  asm__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  insert_ = false;
  _cached_size_ = 0;
}

InsertionPointResponse::~InsertionPointResponse() {
  // @@protoc_insertion_point(destructor:cpad.InsertionPointResponse)
  SharedDtor();
}

void InsertionPointResponse::SharedDtor() {
  asm__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InsertionPointResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertionPointResponse::descriptor() {
  protobuf_plugin_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plugin_5frequest_2eproto::file_level_metadata[3].descriptor;
}

const InsertionPointResponse& InsertionPointResponse::default_instance() {
  protobuf_plugin_5frequest_2eproto::InitDefaults();
  return *internal_default_instance();
}

InsertionPointResponse* InsertionPointResponse::New(::google::protobuf::Arena* arena) const {
  InsertionPointResponse* n = new InsertionPointResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InsertionPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cpad.InsertionPointResponse)
  asm__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  insert_ = false;
}

bool InsertionPointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cpad.InsertionPointResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool insert = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &insert_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string asm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asm_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->asm_().data(), this->asm_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cpad.InsertionPointResponse.asm"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cpad.InsertionPointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cpad.InsertionPointResponse)
  return false;
#undef DO_
}

void InsertionPointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cpad.InsertionPointResponse)
  // bool insert = 1;
  if (this->insert() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->insert(), output);
  }

  // string asm = 2;
  if (this->asm_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asm_().data(), this->asm_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cpad.InsertionPointResponse.asm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->asm_(), output);
  }

  // @@protoc_insertion_point(serialize_end:cpad.InsertionPointResponse)
}

::google::protobuf::uint8* InsertionPointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cpad.InsertionPointResponse)
  // bool insert = 1;
  if (this->insert() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->insert(), target);
  }

  // string asm = 2;
  if (this->asm_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asm_().data(), this->asm_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cpad.InsertionPointResponse.asm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->asm_(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:cpad.InsertionPointResponse)
  return target;
}

size_t InsertionPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cpad.InsertionPointResponse)
  size_t total_size = 0;

  // string asm = 2;
  if (this->asm_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asm_());
  }

  // bool insert = 1;
  if (this->insert() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InsertionPointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cpad.InsertionPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertionPointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InsertionPointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cpad.InsertionPointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cpad.InsertionPointResponse)
    MergeFrom(*source);
  }
}

void InsertionPointResponse::MergeFrom(const InsertionPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cpad.InsertionPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.asm_().size() > 0) {

    asm__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asm__);
  }
  if (from.insert() != 0) {
    set_insert(from.insert());
  }
}

void InsertionPointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cpad.InsertionPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertionPointResponse::CopyFrom(const InsertionPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cpad.InsertionPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertionPointResponse::IsInitialized() const {
  return true;
}

void InsertionPointResponse::Swap(InsertionPointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InsertionPointResponse::InternalSwap(InsertionPointResponse* other) {
  asm__.Swap(&other->asm__);
  std::swap(insert_, other->insert_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InsertionPointResponse::GetMetadata() const {
  protobuf_plugin_5frequest_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plugin_5frequest_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InsertionPointResponse

// bool insert = 1;
void InsertionPointResponse::clear_insert() {
  insert_ = false;
}
bool InsertionPointResponse::insert() const {
  // @@protoc_insertion_point(field_get:cpad.InsertionPointResponse.insert)
  return insert_;
}
void InsertionPointResponse::set_insert(bool value) {
  
  insert_ = value;
  // @@protoc_insertion_point(field_set:cpad.InsertionPointResponse.insert)
}

// string asm = 2;
void InsertionPointResponse::clear_asm_() {
  asm__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InsertionPointResponse::asm_() const {
  // @@protoc_insertion_point(field_get:cpad.InsertionPointResponse.asm)
  return asm__.GetNoArena();
}
void InsertionPointResponse::set_asm_(const ::std::string& value) {
  
  asm__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cpad.InsertionPointResponse.asm)
}
#if LANG_CXX11
void InsertionPointResponse::set_asm_(::std::string&& value) {
  
  asm__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cpad.InsertionPointResponse.asm)
}
#endif
void InsertionPointResponse::set_asm_(const char* value) {
  
  asm__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cpad.InsertionPointResponse.asm)
}
void InsertionPointResponse::set_asm_(const char* value, size_t size) {
  
  asm__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cpad.InsertionPointResponse.asm)
}
::std::string* InsertionPointResponse::mutable_asm_() {
  
  // @@protoc_insertion_point(field_mutable:cpad.InsertionPointResponse.asm)
  return asm__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InsertionPointResponse::release_asm_() {
  // @@protoc_insertion_point(field_release:cpad.InsertionPointResponse.asm)
  
  return asm__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InsertionPointResponse::set_allocated_asm_(::std::string* asm_) {
  if (asm_ != NULL) {
    
  } else {
    
  }
  asm__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asm_);
  // @@protoc_insertion_point(field_set_allocated:cpad.InsertionPointResponse.asm)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace cpad

// @@protoc_insertion_point(global_scope)
