// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin_request.proto

#ifndef PROTOBUF_plugin_5frequest_2eproto__INCLUDED
#define PROTOBUF_plugin_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace cpad {
class InsertionPointRequest;
class InsertionPointRequestDefaultTypeInternal;
extern InsertionPointRequestDefaultTypeInternal _InsertionPointRequest_default_instance_;
class InsertionPointResponse;
class InsertionPointResponseDefaultTypeInternal;
extern InsertionPointResponseDefaultTypeInternal _InsertionPointResponse_default_instance_;
class VersionRequest;
class VersionRequestDefaultTypeInternal;
extern VersionRequestDefaultTypeInternal _VersionRequest_default_instance_;
class VersionResponse;
class VersionResponseDefaultTypeInternal;
extern VersionResponseDefaultTypeInternal _VersionResponse_default_instance_;
}  // namespace cpad

namespace cpad {

namespace protobuf_plugin_5frequest_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_plugin_5frequest_2eproto

enum InsertionLocation {
  FUNCTION_ENTRY_BLOCK = 0,
  FUNCTION_BEFORE_CALL = 1,
  FUNCTION_AFTER_CALL = 2,
  FUNCTION_EXIT_BLOCK = 3,
  BASIC_BLOCK_ENTRY = 4,
  BASIC_BLOCK_EXIT = 5,
  InsertionLocation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InsertionLocation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InsertionLocation_IsValid(int value);
const InsertionLocation InsertionLocation_MIN = FUNCTION_ENTRY_BLOCK;
const InsertionLocation InsertionLocation_MAX = BASIC_BLOCK_EXIT;
const int InsertionLocation_ARRAYSIZE = InsertionLocation_MAX + 1;

const ::google::protobuf::EnumDescriptor* InsertionLocation_descriptor();
inline const ::std::string& InsertionLocation_Name(InsertionLocation value) {
  return ::google::protobuf::internal::NameOfEnum(
    InsertionLocation_descriptor(), value);
}
inline bool InsertionLocation_Parse(
    const ::std::string& name, InsertionLocation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InsertionLocation>(
    InsertionLocation_descriptor(), name, value);
}
// ===================================================================

class VersionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cpad.VersionRequest) */ {
 public:
  VersionRequest();
  virtual ~VersionRequest();

  VersionRequest(const VersionRequest& from);

  inline VersionRequest& operator=(const VersionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VersionRequest& default_instance();

  static inline const VersionRequest* internal_default_instance() {
    return reinterpret_cast<const VersionRequest*>(
               &_VersionRequest_default_instance_);
  }

  void Swap(VersionRequest* other);

  // implements Message ----------------------------------------------

  inline VersionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  VersionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VersionRequest& from);
  void MergeFrom(const VersionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string client_provider_name = 3;
  void clear_client_provider_name();
  static const int kClientProviderNameFieldNumber = 3;
  const ::std::string& client_provider_name() const;
  void set_client_provider_name(const ::std::string& value);
  #if LANG_CXX11
  void set_client_provider_name(::std::string&& value);
  #endif
  void set_client_provider_name(const char* value);
  void set_client_provider_name(const char* value, size_t size);
  ::std::string* mutable_client_provider_name();
  ::std::string* release_client_provider_name();
  void set_allocated_client_provider_name(::std::string* client_provider_name);

  // uint32 client_version_minor = 1;
  void clear_client_version_minor();
  static const int kClientVersionMinorFieldNumber = 1;
  ::google::protobuf::uint32 client_version_minor() const;
  void set_client_version_minor(::google::protobuf::uint32 value);

  // uint32 client_version_major = 2;
  void clear_client_version_major();
  static const int kClientVersionMajorFieldNumber = 2;
  ::google::protobuf::uint32 client_version_major() const;
  void set_client_version_major(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cpad.VersionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr client_provider_name_;
  ::google::protobuf::uint32 client_version_minor_;
  ::google::protobuf::uint32 client_version_major_;
  mutable int _cached_size_;
  friend struct protobuf_plugin_5frequest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VersionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cpad.VersionResponse) */ {
 public:
  VersionResponse();
  virtual ~VersionResponse();

  VersionResponse(const VersionResponse& from);

  inline VersionResponse& operator=(const VersionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VersionResponse& default_instance();

  static inline const VersionResponse* internal_default_instance() {
    return reinterpret_cast<const VersionResponse*>(
               &_VersionResponse_default_instance_);
  }

  void Swap(VersionResponse* other);

  // implements Message ----------------------------------------------

  inline VersionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  VersionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VersionResponse& from);
  void MergeFrom(const VersionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VersionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string server_provider_name = 3;
  void clear_server_provider_name();
  static const int kServerProviderNameFieldNumber = 3;
  const ::std::string& server_provider_name() const;
  void set_server_provider_name(const ::std::string& value);
  #if LANG_CXX11
  void set_server_provider_name(::std::string&& value);
  #endif
  void set_server_provider_name(const char* value);
  void set_server_provider_name(const char* value, size_t size);
  ::std::string* mutable_server_provider_name();
  ::std::string* release_server_provider_name();
  void set_allocated_server_provider_name(::std::string* server_provider_name);

  // uint32 server_version_minor = 1;
  void clear_server_version_minor();
  static const int kServerVersionMinorFieldNumber = 1;
  ::google::protobuf::uint32 server_version_minor() const;
  void set_server_version_minor(::google::protobuf::uint32 value);

  // uint32 server_version_major = 2;
  void clear_server_version_major();
  static const int kServerVersionMajorFieldNumber = 2;
  ::google::protobuf::uint32 server_version_major() const;
  void set_server_version_major(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:cpad.VersionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr server_provider_name_;
  ::google::protobuf::uint32 server_version_minor_;
  ::google::protobuf::uint32 server_version_major_;
  mutable int _cached_size_;
  friend struct protobuf_plugin_5frequest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InsertionPointRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cpad.InsertionPointRequest) */ {
 public:
  InsertionPointRequest();
  virtual ~InsertionPointRequest();

  InsertionPointRequest(const InsertionPointRequest& from);

  inline InsertionPointRequest& operator=(const InsertionPointRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertionPointRequest& default_instance();

  static inline const InsertionPointRequest* internal_default_instance() {
    return reinterpret_cast<const InsertionPointRequest*>(
               &_InsertionPointRequest_default_instance_);
  }

  void Swap(InsertionPointRequest* other);

  // implements Message ----------------------------------------------

  inline InsertionPointRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  InsertionPointRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InsertionPointRequest& from);
  void MergeFrom(const InsertionPointRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InsertionPointRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cfun_name = 1;
  void clear_cfun_name();
  static const int kCfunNameFieldNumber = 1;
  const ::std::string& cfun_name() const;
  void set_cfun_name(const ::std::string& value);
  #if LANG_CXX11
  void set_cfun_name(::std::string&& value);
  #endif
  void set_cfun_name(const char* value);
  void set_cfun_name(const char* value, size_t size);
  ::std::string* mutable_cfun_name();
  ::std::string* release_cfun_name();
  void set_allocated_cfun_name(::std::string* cfun_name);

  // .cpad.InsertionLocation location = 2;
  void clear_location();
  static const int kLocationFieldNumber = 2;
  ::cpad::InsertionLocation location() const;
  void set_location(::cpad::InsertionLocation value);

  // @@protoc_insertion_point(class_scope:cpad.InsertionPointRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cfun_name_;
  int location_;
  mutable int _cached_size_;
  friend struct protobuf_plugin_5frequest_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InsertionPointResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cpad.InsertionPointResponse) */ {
 public:
  InsertionPointResponse();
  virtual ~InsertionPointResponse();

  InsertionPointResponse(const InsertionPointResponse& from);

  inline InsertionPointResponse& operator=(const InsertionPointResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InsertionPointResponse& default_instance();

  static inline const InsertionPointResponse* internal_default_instance() {
    return reinterpret_cast<const InsertionPointResponse*>(
               &_InsertionPointResponse_default_instance_);
  }

  void Swap(InsertionPointResponse* other);

  // implements Message ----------------------------------------------

  inline InsertionPointResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  InsertionPointResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InsertionPointResponse& from);
  void MergeFrom(const InsertionPointResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InsertionPointResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string asm = 2;
  void clear_asm_();
  static const int kAsmFieldNumber = 2;
  const ::std::string& asm_() const;
  void set_asm_(const ::std::string& value);
  #if LANG_CXX11
  void set_asm_(::std::string&& value);
  #endif
  void set_asm_(const char* value);
  void set_asm_(const char* value, size_t size);
  ::std::string* mutable_asm_();
  ::std::string* release_asm_();
  void set_allocated_asm_(::std::string* asm_);

  // bool insert = 1;
  void clear_insert();
  static const int kInsertFieldNumber = 1;
  bool insert() const;
  void set_insert(bool value);

  // @@protoc_insertion_point(class_scope:cpad.InsertionPointResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr asm__;
  bool insert_;
  mutable int _cached_size_;
  friend struct protobuf_plugin_5frequest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VersionRequest

// uint32 client_version_minor = 1;
inline void VersionRequest::clear_client_version_minor() {
  client_version_minor_ = 0u;
}
inline ::google::protobuf::uint32 VersionRequest::client_version_minor() const {
  // @@protoc_insertion_point(field_get:cpad.VersionRequest.client_version_minor)
  return client_version_minor_;
}
inline void VersionRequest::set_client_version_minor(::google::protobuf::uint32 value) {
  
  client_version_minor_ = value;
  // @@protoc_insertion_point(field_set:cpad.VersionRequest.client_version_minor)
}

// uint32 client_version_major = 2;
inline void VersionRequest::clear_client_version_major() {
  client_version_major_ = 0u;
}
inline ::google::protobuf::uint32 VersionRequest::client_version_major() const {
  // @@protoc_insertion_point(field_get:cpad.VersionRequest.client_version_major)
  return client_version_major_;
}
inline void VersionRequest::set_client_version_major(::google::protobuf::uint32 value) {
  
  client_version_major_ = value;
  // @@protoc_insertion_point(field_set:cpad.VersionRequest.client_version_major)
}

// string client_provider_name = 3;
inline void VersionRequest::clear_client_provider_name() {
  client_provider_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VersionRequest::client_provider_name() const {
  // @@protoc_insertion_point(field_get:cpad.VersionRequest.client_provider_name)
  return client_provider_name_.GetNoArena();
}
inline void VersionRequest::set_client_provider_name(const ::std::string& value) {
  
  client_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cpad.VersionRequest.client_provider_name)
}
#if LANG_CXX11
inline void VersionRequest::set_client_provider_name(::std::string&& value) {
  
  client_provider_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cpad.VersionRequest.client_provider_name)
}
#endif
inline void VersionRequest::set_client_provider_name(const char* value) {
  
  client_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cpad.VersionRequest.client_provider_name)
}
inline void VersionRequest::set_client_provider_name(const char* value, size_t size) {
  
  client_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cpad.VersionRequest.client_provider_name)
}
inline ::std::string* VersionRequest::mutable_client_provider_name() {
  
  // @@protoc_insertion_point(field_mutable:cpad.VersionRequest.client_provider_name)
  return client_provider_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VersionRequest::release_client_provider_name() {
  // @@protoc_insertion_point(field_release:cpad.VersionRequest.client_provider_name)
  
  return client_provider_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VersionRequest::set_allocated_client_provider_name(::std::string* client_provider_name) {
  if (client_provider_name != NULL) {
    
  } else {
    
  }
  client_provider_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_provider_name);
  // @@protoc_insertion_point(field_set_allocated:cpad.VersionRequest.client_provider_name)
}

// -------------------------------------------------------------------

// VersionResponse

// uint32 server_version_minor = 1;
inline void VersionResponse::clear_server_version_minor() {
  server_version_minor_ = 0u;
}
inline ::google::protobuf::uint32 VersionResponse::server_version_minor() const {
  // @@protoc_insertion_point(field_get:cpad.VersionResponse.server_version_minor)
  return server_version_minor_;
}
inline void VersionResponse::set_server_version_minor(::google::protobuf::uint32 value) {
  
  server_version_minor_ = value;
  // @@protoc_insertion_point(field_set:cpad.VersionResponse.server_version_minor)
}

// uint32 server_version_major = 2;
inline void VersionResponse::clear_server_version_major() {
  server_version_major_ = 0u;
}
inline ::google::protobuf::uint32 VersionResponse::server_version_major() const {
  // @@protoc_insertion_point(field_get:cpad.VersionResponse.server_version_major)
  return server_version_major_;
}
inline void VersionResponse::set_server_version_major(::google::protobuf::uint32 value) {
  
  server_version_major_ = value;
  // @@protoc_insertion_point(field_set:cpad.VersionResponse.server_version_major)
}

// string server_provider_name = 3;
inline void VersionResponse::clear_server_provider_name() {
  server_provider_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VersionResponse::server_provider_name() const {
  // @@protoc_insertion_point(field_get:cpad.VersionResponse.server_provider_name)
  return server_provider_name_.GetNoArena();
}
inline void VersionResponse::set_server_provider_name(const ::std::string& value) {
  
  server_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cpad.VersionResponse.server_provider_name)
}
#if LANG_CXX11
inline void VersionResponse::set_server_provider_name(::std::string&& value) {
  
  server_provider_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cpad.VersionResponse.server_provider_name)
}
#endif
inline void VersionResponse::set_server_provider_name(const char* value) {
  
  server_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cpad.VersionResponse.server_provider_name)
}
inline void VersionResponse::set_server_provider_name(const char* value, size_t size) {
  
  server_provider_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cpad.VersionResponse.server_provider_name)
}
inline ::std::string* VersionResponse::mutable_server_provider_name() {
  
  // @@protoc_insertion_point(field_mutable:cpad.VersionResponse.server_provider_name)
  return server_provider_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VersionResponse::release_server_provider_name() {
  // @@protoc_insertion_point(field_release:cpad.VersionResponse.server_provider_name)
  
  return server_provider_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VersionResponse::set_allocated_server_provider_name(::std::string* server_provider_name) {
  if (server_provider_name != NULL) {
    
  } else {
    
  }
  server_provider_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_provider_name);
  // @@protoc_insertion_point(field_set_allocated:cpad.VersionResponse.server_provider_name)
}

// -------------------------------------------------------------------

// InsertionPointRequest

// string cfun_name = 1;
inline void InsertionPointRequest::clear_cfun_name() {
  cfun_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InsertionPointRequest::cfun_name() const {
  // @@protoc_insertion_point(field_get:cpad.InsertionPointRequest.cfun_name)
  return cfun_name_.GetNoArena();
}
inline void InsertionPointRequest::set_cfun_name(const ::std::string& value) {
  
  cfun_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cpad.InsertionPointRequest.cfun_name)
}
#if LANG_CXX11
inline void InsertionPointRequest::set_cfun_name(::std::string&& value) {
  
  cfun_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cpad.InsertionPointRequest.cfun_name)
}
#endif
inline void InsertionPointRequest::set_cfun_name(const char* value) {
  
  cfun_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cpad.InsertionPointRequest.cfun_name)
}
inline void InsertionPointRequest::set_cfun_name(const char* value, size_t size) {
  
  cfun_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cpad.InsertionPointRequest.cfun_name)
}
inline ::std::string* InsertionPointRequest::mutable_cfun_name() {
  
  // @@protoc_insertion_point(field_mutable:cpad.InsertionPointRequest.cfun_name)
  return cfun_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertionPointRequest::release_cfun_name() {
  // @@protoc_insertion_point(field_release:cpad.InsertionPointRequest.cfun_name)
  
  return cfun_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertionPointRequest::set_allocated_cfun_name(::std::string* cfun_name) {
  if (cfun_name != NULL) {
    
  } else {
    
  }
  cfun_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cfun_name);
  // @@protoc_insertion_point(field_set_allocated:cpad.InsertionPointRequest.cfun_name)
}

// .cpad.InsertionLocation location = 2;
inline void InsertionPointRequest::clear_location() {
  location_ = 0;
}
inline ::cpad::InsertionLocation InsertionPointRequest::location() const {
  // @@protoc_insertion_point(field_get:cpad.InsertionPointRequest.location)
  return static_cast< ::cpad::InsertionLocation >(location_);
}
inline void InsertionPointRequest::set_location(::cpad::InsertionLocation value) {
  
  location_ = value;
  // @@protoc_insertion_point(field_set:cpad.InsertionPointRequest.location)
}

// -------------------------------------------------------------------

// InsertionPointResponse

// bool insert = 1;
inline void InsertionPointResponse::clear_insert() {
  insert_ = false;
}
inline bool InsertionPointResponse::insert() const {
  // @@protoc_insertion_point(field_get:cpad.InsertionPointResponse.insert)
  return insert_;
}
inline void InsertionPointResponse::set_insert(bool value) {
  
  insert_ = value;
  // @@protoc_insertion_point(field_set:cpad.InsertionPointResponse.insert)
}

// string asm = 2;
inline void InsertionPointResponse::clear_asm_() {
  asm__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InsertionPointResponse::asm_() const {
  // @@protoc_insertion_point(field_get:cpad.InsertionPointResponse.asm)
  return asm__.GetNoArena();
}
inline void InsertionPointResponse::set_asm_(const ::std::string& value) {
  
  asm__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cpad.InsertionPointResponse.asm)
}
#if LANG_CXX11
inline void InsertionPointResponse::set_asm_(::std::string&& value) {
  
  asm__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cpad.InsertionPointResponse.asm)
}
#endif
inline void InsertionPointResponse::set_asm_(const char* value) {
  
  asm__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cpad.InsertionPointResponse.asm)
}
inline void InsertionPointResponse::set_asm_(const char* value, size_t size) {
  
  asm__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cpad.InsertionPointResponse.asm)
}
inline ::std::string* InsertionPointResponse::mutable_asm_() {
  
  // @@protoc_insertion_point(field_mutable:cpad.InsertionPointResponse.asm)
  return asm__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InsertionPointResponse::release_asm_() {
  // @@protoc_insertion_point(field_release:cpad.InsertionPointResponse.asm)
  
  return asm__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InsertionPointResponse::set_allocated_asm_(::std::string* asm_) {
  if (asm_ != NULL) {
    
  } else {
    
  }
  asm__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asm_);
  // @@protoc_insertion_point(field_set_allocated:cpad.InsertionPointResponse.asm)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace cpad

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::cpad::InsertionLocation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cpad::InsertionLocation>() {
  return ::cpad::InsertionLocation_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_plugin_5frequest_2eproto__INCLUDED
